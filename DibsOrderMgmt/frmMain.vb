Imports System.Data.SqlClient
Imports System.IO
Imports System.IO.Compression
Imports System.Net
Imports DevExpress.Utils
Imports DevExpress.XtraBars
Imports DevExpress.XtraEditors
Imports DevExpress.XtraGrid.Views.Grid
Imports DevExpress.XtraGrid.Views.Grid.ViewInfo

Public Class frmMain

    Sub New()
        Try


            '   MsgBox("Init")
            InitializeComponent()
            ' This line of code is generated by Data Source Configuration Wizard
            'Commented out...because are going to set data manually
            ' OmqryOrdersMainTableAdapter1.Fill(DiBS_DB_ProdDataSet1.omqryOrdersMain)
            '    MsgBox("Set Connection")
            SetConnection()
            '    MsgBox("Load Grid")
            LoadOrdersGrid()
            If MetaSearchTabClickedOnce = True Then
                LoadMetaSearchGrid()
            End If



            'Lets set the Hive Template files path
            '  MsgBox("Set Hive Template")
            HiveTemplatePath = Application.StartupPath() & "\HiveTemplates\"
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try
    End Sub
    Private Sub LoadOrdersGrid()
        Try


            Dim sSQL As String = "SELECT * FROM omqryOrdersMain Order By BHPONumber DESC"

            Dim ds As New DataSet
            Dim da As SqlDataAdapter
            Dim iCount As Integer

            oConnection = New SqlConnection(sConnectionString)
            oConnection.Open()
            da = New SqlDataAdapter(sSQL, oConnection)
            da.Fill(ds)
            oConnection.Close()

            gridOrders.DataSource = ds.Tables(0)

        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try



    End Sub
    Private Sub LoadMetaSearchGrid()

        Dim sSQL As String = "SELECT * FROM omqryMetaSearch Order By PartnerID, Language"

        Dim ds As New DataSet
        Dim da As SqlDataAdapter
        Dim iCount As Integer

        oConnection = New SqlConnection(sConnectionString)
        oConnection.Open()
        da = New SqlDataAdapter(sSQL, oConnection)
        da.Fill(ds)
        oConnection.Close()

        GridMetaSearch.DataSource = ds.Tables(0)


    End Sub

    Private Sub LoadPubInvoiceGrid()

        Dim sSQL As String = "SELECT * FROM omqryPubInvoiceTracker Order By DatePaid ASC, DueDate"

        Dim ds As New DataSet
        Dim da As SqlDataAdapter
        Dim iCount As Integer

        oConnection = New SqlConnection(sConnectionString)
        oConnection.Open()
        da = New SqlDataAdapter(sSQL, oConnection)
        da.Fill(ds)
        oConnection.Close()

        gridPubInvoices.DataSource = ds.Tables(0)


    End Sub
    Private Sub cmdButton_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub cmdNewOrder_Click(sender As Object, e As EventArgs) Handles cmdNewOrder.Click
        Dim oNewOrderID As Guid

        oNewOrderID = Guid.NewGuid


        Dim oForm As New frmNewOrder

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oNewOrderID
            .StartPosition = FormStartPosition.CenterParent
            .ShowDialog()
        End With

        LoadOrdersGrid()
    End Sub

    Private Sub panelTop_Paint(sender As Object, e As PaintEventArgs) Handles panelTop.Paint

    End Sub

    Private Sub frmMain_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        'TODO: This line of code loads data into the 'DiBS_DB_ProdDataSet5.omMetaData' table. You can move, or remove it, as needed.
        ' Me.OmMetaDataTableAdapter.Fill(Me.DiBS_DB_ProdDataSet5.omMetaData)
        ' XtraTabControl1.TabPages(1).Show()



    End Sub

    Private Sub mainTab_Paint(sender As Object, e As PaintEventArgs)

        Dim sColor As String
        Dim oColor As Color





        oColor = Color.White
        Dim ColorBrush As SolidBrush = New SolidBrush(oColor)
        Dim rect As Rectangle = New Rectangle(0, 0, 200, 200)
        rect = sender.bounds
        e.Graphics.FillRectangle(ColorBrush, rect)


    End Sub

    Private Sub XtraTabControl1_Click(sender As Object, e As EventArgs) Handles XtraTabControl1.Click

    End Sub

    Private Sub XtraTabControl1_Paint(sender As Object, e As PaintEventArgs) Handles XtraTabControl1.Paint
        Dim sColor As String
        Dim oColor As Color

        oColor = Color.White
        Dim ColorBrush As SolidBrush = New SolidBrush(oColor)
        Dim rect As Rectangle = New Rectangle(0, 0, 200, 200)
        rect = sender.bounds
        e.Graphics.FillRectangle(ColorBrush, rect)
    End Sub

    Private Sub XtraTabPage2_Paint(sender As Object, e As PaintEventArgs) Handles XtraTabPage2_Orders.Paint
        Dim sColor As String
        Dim oColor As Color

        oColor = Color.White
        Dim ColorBrush As SolidBrush = New SolidBrush(oColor)
        Dim rect As Rectangle = New Rectangle(0, 0, 200, 200)
        rect = sender.bounds
        e.Graphics.FillRectangle(ColorBrush, rect)
    End Sub

    Private Sub gridOrders_Click(sender As Object, e As EventArgs) Handles gridOrders.Click

    End Sub

    Private Sub gridOrders_Paint(sender As Object, e As PaintEventArgs) Handles gridOrders.Paint

    End Sub

    Private Sub GridView1_RowCellStyle(sender As Object, e As RowCellStyleEventArgs) Handles GridView1.RowCellStyle
        Dim view As GridView = TryCast(sender, GridView)
        ' Dim _mark As Boolean = CBool(view.GetRowCellValue(e.RowHandle, "Mark"))
        Dim oColor As Color
        Dim sColorName As String

        If e.Column.FieldName = "OrderStatus" Then
            If Not IsNothing(view.GetRowCellValue(e.RowHandle, "OrderStatusColor")) Then
                sColorName = view.GetRowCellValue(e.RowHandle, "OrderStatusColor").ToString
                If IsNothing(sColorName) Or sColorName = "" Then Exit Sub
                oColor = Color.FromName(sColorName)
                e.Appearance.BackColor = oColor

            End If


            'e.Appearance.BackColor = If(_mark, Color.LightGreen, Color.LightSalmon)
            'e.Appearance.TextOptions.HAlignment = If(_mark, HorzAlignment.Far, HorzAlignment.Near)
        End If
        'If e.Column.FieldName = "Length" Then
        '    Dim _length As Double = CDbl(e.CellValue)
        '    If _length > 25 Then
        '        e.Appearance.ForeColor = Color.Red
        '    End If
        'End If
    End Sub

    Private Sub GridView1_MouseUp(sender As Object, e As MouseEventArgs) Handles GridView1.MouseUp
        If e.Button = MouseButtons.Right Then
            PopupMenu_Orders.ShowPopup(Control.MousePosition)
        End If
    End Sub
    Private Sub BarButtonItem1_Documents_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_Documents.ItemClick
        Dim oEditOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)

        'oRow.Item("OrderID").ToString()
        oEditOrderID = Guid.Parse(oRow.Item("OrderID").ToString())


        Dim oForm As New frmOrderDocuments

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oEditOrderID
            .StartPosition = FormStartPosition.CenterParent

            ' .MdiParent = Me
            .Show()


        End With

    End Sub
    Private Sub BarButtonItem_OrderDetail_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem_OrderDetail.ItemClick
        LoadOrderDetail()

    End Sub

    Private Sub SimpleButton1_Click(sender As Object, e As EventArgs) Handles SimpleButton1.Click
        Dim sOrderID As String

        sOrderID = "88ca28fb-c71a-4971-af40-cb84d48bdc17"


        'Dim ofrmBrowser As New frmEBookSales
        ''frmEBookSalesAdd
        'With ofrmBrowser
        '    .oOrderID = Guid.Parse(sOrderID)
        '    .bAllEBookSales = True
        '    ' .HTMLFolder = seBookPath

        '    .Show()
        'End With

        Dim oFrm As New frmSchoolBookUsers

        With oFrm


            .Show()
        End With



    End Sub

    Private Sub SimpleButton2_Click(sender As Object, e As EventArgs) Handles SimpleButton2.Click
        Dim oFrmPdf As New frmPDFViewer

        Dim sSQL As String = "SELECT * FROM omOrderDocuments where DocumentID='3e19c385-015c-402c-bf44-d52c41605b7e'"

        Dim ds As New DataSet
        Dim da As SqlDataAdapter
        Dim iCount As Integer

        oConnection = New SqlConnection(sConnectionString)
        oConnection.Open()
        da = New SqlDataAdapter(sSQL, oConnection)
        da.Fill(ds)
        oConnection.Close()
        Dim oBytes As Byte()

        oBytes = ds.Tables(0).Rows(0).Item("OrderDoc")

        With oFrmPdf
            .PDFBytes = oBytes
            .LoadPDF()
            .StartPosition = FormStartPosition.CenterParent
            .Show()

        End With

    End Sub

    Public Sub LoadOrderDetail()
        Dim oEditOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow

        Try
            Me.Cursor = Cursors.WaitCursor

            If selectedRowHandles.Count <> 1 Then
                MsgBox("Must select 1 Row")
                Exit Sub
            End If
            selectedRowHandle = selectedRowHandles(0)

            oRow = GridView1.GetDataRow(selectedRowHandle)

            'oRow.Item("OrderID").ToString()
            oEditOrderID = Guid.Parse(oRow.Item("OrderID").ToString())


            Dim oForm As New frmNewOrder

            With oForm
                '.dgv_Grid.DataSource = ds.Tables(0)
                .oOrderID = oEditOrderID
                .bExistingOrder = True
                .StartPosition = FormStartPosition.CenterParent
                Me.Cursor = Cursors.Default
                .Show()

            End With
            'Refresh the grid (Could speed up by not refreshing a cancel)
            LoadOrdersGrid()

        Catch ex As Exception
            Me.Cursor = Cursors.Default
            MsgBox(ex.Message)
        End Try
    End Sub

    Private Sub gridOrders_DoubleClick(sender As Object, e As EventArgs) Handles gridOrders.DoubleClick
        LoadOrderDetail()
    End Sub

    Private Sub BarButtonItem1_OrderSets_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_OrderSets.ItemClick
        Dim oEditOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)

        'oRow.Item("OrderID").ToString()
        oEditOrderID = Guid.Parse(oRow.Item("OrderID").ToString())


        Dim oForm As New frmOrderSets

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oEditOrderID
            .StartPosition = FormStartPosition.CenterParent

            .Show(Me.Owner)

        End With

        LoadOrdersGrid()

    End Sub

    Private Sub cmdMetaImport_Click(sender As Object, e As EventArgs) Handles cmdMetaImport.Click
        frmMetaImport.Show()
    End Sub

    Private Sub BarButtonItem1_OrderItems_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_OrderItems.ItemClick
        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)

        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())


        Dim oForm As New frmOrderItems

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oOrderID
            .StartPosition = FormStartPosition.CenterParent

            .Show(Me.Owner)

        End With
    End Sub

    Private Sub BarButtonItem1_PublisherPOs_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_PublisherPOs.ItemClick

        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim sFile As String
        Dim iPartnerID As Integer
        Dim iPartnerCnt As Integer
        Dim oForms As List(Of frmPublisherPO)
        Dim ofrmPOPublisher As frmPublisherPO
        Dim oSelectedPartners As List(Of DataRowView)

        Dim oOrderPartners As DataTable

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)



        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        oOrderPartners = GetPartnersInOrder(oOrderID.ToString)
        iPartnerCnt = oOrderPartners.Rows.Count

        'Need to swap this out later...maybe store in DB
        sFile = HiveTemplatePath & "HIVE_PublisherPO_Template.xlsx"

        Select Case iPartnerCnt
            Case 0
                MsgBox("There are no order items in this Order from a Partner.")
                Exit Sub

            Case 1

                'Only 1 or, so go an launch each
                For Each oRow In oOrderPartners.Rows
                    iPartnerID = oRow.Item("PartnerID")
                    ofrmPOPublisher = New frmPublisherPO


                    With ofrmPOPublisher
                        .Text = oRow.Item("PublisherShortName").ToString & " - PO: "
                        .oOrderInfoDataTable = GetOrderInfo(oOrderID)
                        .iPartnerID = iPartnerID
                        .oOrderID = oOrderID
                        .oOrderDocType = clsDibsOrderMgmt.OrderDocTypes.PubPO
                        .SpreadsheetControl1.LoadDocument(sFile)
                        .SetPublisherPO_FixedCells()
                        .AddOrderItems()
                        .StartPosition = FormStartPosition.CenterParent
                        .Show()
                        ' .LoadExcel()

                    End With
                Next




            Case Else


                Dim oSelectPartners As New frmOrderPublishersSelect

                With oSelectPartners
                    .oOrderID = oOrderID
                    .oOrderPartners = oOrderPartners
                    .StartPosition = FormStartPosition.CenterParent
                    .ShowDialog()

                    If .bCanceled = True Then Exit Sub
                    oSelectedPartners = .oPartnersSelected
                End With

                'Instead of a data table....here we have a list of select rows
                For Each oDataRowView In oSelectedPartners
                    iPartnerID = oDataRowView.Row.Item("PartnerID")
                    ofrmPOPublisher = New frmPublisherPO

                    With ofrmPOPublisher
                        .Text = oDataRowView.Row.Item("PublisherShortName").ToString & " - PO: "
                        .oOrderInfoDataTable = GetOrderInfo(oOrderID)
                        .iPartnerID = iPartnerID
                        .oOrderID = oOrderID
                        .oOrderDocType = clsDibsOrderMgmt.OrderDocTypes.PubPO
                        .SpreadsheetControl1.LoadDocument(sFile)
                        .SetPublisherPO_FixedCells()
                        .AddOrderItems()
                        .StartPosition = FormStartPosition.CenterParent
                        .Show()




                    End With
                Next


        End Select









    End Sub

    Private Sub BarButtonItem2_CreateQuote_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem2_CreateQuote.ItemClick
        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim sFile As String
        Dim iPartnerID As Integer
        Dim iPartnerCnt As Integer
        Dim oForms As List(Of frmPublisherPO)
        Dim ofrmPOPublisher As frmPublisherPO
        Dim oSelectedPartners As List(Of DataRowView)

        Dim oOrderPartners As DataTable

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)



        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        oOrderPartners = GetPartnersInOrder(oOrderID.ToString)
        iPartnerCnt = oOrderPartners.Rows.Count

        'Need to swap this out later...maybe store in DB
        sFile = HiveTemplatePath & "HIVE_PublisherCheckin_Template.xlsx"

        Select Case iPartnerCnt
            Case 0
                MsgBox("There are no order items in this Order from a Partner.")
                Exit Sub

            Case 1

                'Only 1 or, so go an launch each
                For Each oRow In oOrderPartners.Rows
                    iPartnerID = oRow.Item("PartnerID")
                    ofrmPOPublisher = New frmPublisherPO


                    With ofrmPOPublisher
                        .Text = oRow.Item("PublisherShortName").ToString & " - PO: "
                        .iPartnerID = iPartnerID
                        .oOrderID = oOrderID
                        .SpreadsheetControl1.LoadDocument(sFile)
                        .SetPublisherPO_FixedCells()
                        .AddOrderItems()
                        .StartPosition = FormStartPosition.CenterParent
                        .Show()
                        ' .LoadExcel()

                    End With
                Next
            Case Else


                Dim oSelectPartners As New frmOrderPublishersSelect

                With oSelectPartners
                    .oOrderID = oOrderID
                    .oOrderPartners = oOrderPartners
                    .StartPosition = FormStartPosition.CenterParent
                    .ShowDialog()

                    If .bCanceled = True Then Exit Sub
                    oSelectedPartners = .oPartnersSelected
                End With

                'Instead of a data table....here we have a list of select rows
                For Each oDataRowView In oSelectedPartners
                    iPartnerID = oDataRowView.Row.Item("PartnerID")
                    ofrmPOPublisher = New frmPublisherPO

                    With ofrmPOPublisher
                        .Text = oDataRowView.Row.Item("PublisherShortName").ToString & " - PO: "
                        .iPartnerID = iPartnerID
                        .oOrderID = oOrderID
                        .SpreadsheetControl1.LoadDocument(sFile)
                        .SetPublisherPO_FixedCells()
                        .AddOrderItems()
                        .StartPosition = FormStartPosition.CenterParent
                        .Show()
                        ' .LoadExcel()

                    End With
                Next
        End Select





    End Sub
    'BarButtonItem1_CustomerInvoiceOrderItems
    Private Sub BarButtonItem1_CustomerInvoiceOrderSets_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_CustomerInvoiceOrderSets.ItemClick
        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim sFile As String
        Dim sCustomerPO As String
        Dim sBHPO As String
        Dim sBillTo_Name As String
        Dim sBillTo_Name_NoSpace As String

        Dim sBillToState As String
        Dim sInvoiceFileName As String

        'We modified this to handle the customer PO as well
        Dim frmCustomerInvoice As New frmPublisherPO

        Dim oOrderSets As DataTable

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)



        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        oOrderSets = GetOrderSetsInOrder(oOrderID.ToString)


        'Need to swap this out later...maybe store in DB
        sFile = HiveTemplatePath & "HIVE_Customer_Invoice_Template.xlsx"


        With oRow
            sCustomerPO = .Item("PurchasingPONumber").ToString
            sBHPO = .Item("BHPONumber").ToString
            sBillTo_Name = .Item("BillTo_Name").ToString
            sBillToState = .Item("BillTo_State").ToString
        End With
        'Lets get rid on the spaces from the name

        sBillTo_Name_NoSpace = sBillTo_Name.Replace(" ", "")

        'INV_KS_HAYSUSD_PO_0084220022
        sInvoiceFileName = "INV_" & sBillToState & "_" & sBillTo_Name_NoSpace & "_PO_" & sCustomerPO

        With frmCustomerInvoice

            .BarButtonItem1.Caption = "Save INV to Order Docs"
            .BarButtonItem2.Caption = "Send INV to Customer"


            .BarButtonItem2.ImageOptions.LargeImage = My.Resources.sendpdf_32x32
            .oOrderDocType = clsDibsOrderMgmt.OrderDocTypes.CustInvoice
            .Text = sInvoiceFileName
            .oOrderInfoDataTable = GetOrderInfo(oOrderID)
            .oOrderSetsDataTable = oOrderSets
            .oOrderID = oOrderID
            .SpreadsheetControl1.LoadDocument(sFile)
            '
            '.SetPublisherPO_FixedCells()
            .SetCustomerInvoice_FixedCells()
            '.AddOrderItems()
            .AddOrderSets()
            .StartPosition = FormStartPosition.CenterParent
            .Show()
            ' .LoadExcel()

        End With


    End Sub

    Private Sub BarButtonItem1_CustomerPackingSlip_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_CustomerPackingSlip.ItemClick
        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim sFile As String
        Dim sCustomerPO As String
        Dim sBHPO As String
        Dim sBillTo_Name As String
        Dim sBillTo_Name_NoSpace As String

        Dim sBillToState As String
        Dim sInvoiceFileName As String

        'We modified this to handle the customer PO as well
        Dim frmCustomerInvoice As New frmPublisherPO

        Dim oOrderSets As DataTable

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)



        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        oOrderSets = GetOrderSetsInOrder(oOrderID.ToString)


        'Need to swap this out later...maybe store in DB
        sFile = HiveTemplatePath & "HIVE_PackingSlip_Template.xlsx"


        With oRow
            sCustomerPO = .Item("PurchasingPONumber").ToString
            sBHPO = .Item("BHPONumber").ToString
            sBillTo_Name = .Item("BillTo_Name").ToString
            sBillToState = .Item("BillTo_State").ToString
        End With
        'Lets get rid on the spaces from the name

        sBillTo_Name_NoSpace = sBillTo_Name.Replace(" ", "")

        'INV_KS_HAYSUSD_PO_0084220022
        sInvoiceFileName = "PackingSlip_" & sBillToState & "_" & sBillTo_Name_NoSpace & "_" & sBHPO

        With frmCustomerInvoice

            .BarButtonItem1.Caption = "Save Packing Slip to Order Docs"
            .BarButtonItem2.Caption = "Send Packing Slip"


            ' .BarButtonItem2.ImageOptions.LargeImage = My.Resources.sendpdf_32x32
            .oOrderDocType = clsDibsOrderMgmt.OrderDocTypes.CustPackingSlip
            .Text = sInvoiceFileName
            .oOrderInfoDataTable = GetOrderInfo(oOrderID)
            .oOrderSetsDataTable = oOrderSets
            .oOrderID = oOrderID
            .SpreadsheetControl1.LoadDocument(sFile)
            '

            .SetCustomerPackingSlip_FixedCells()
            '         .AddOrderSets()
            '.AddOrderItems()
            .AddPackingSlipItems()
            .StartPosition = FormStartPosition.CenterParent
            .Show()
            ' .LoadExcel()

        End With

    End Sub

    Private Sub BarSubItem1_EditOrder_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarSubItem1_EditOrder.ItemClick

    End Sub

    Private Sub cmdRefreshGrid_Click(sender As Object, e As EventArgs) Handles cmdRefreshGrid.Click
        LoadOrdersGrid()
    End Sub

    Private Sub GridView2_RowCellClick(sender As Object, e As RowCellClickEventArgs) Handles GridView2.RowCellClick


        If e.Column.FieldName = "eBook_ISBN_13" Then

            ShowBookCover(e.Location)



        End If
    End Sub

    Private Sub ShowBookCover(oPoint As Point)
        Dim oEditOrderID As Guid
        Dim selectedRowHandle As Int32
        Dim selectedRowHandles As Int32()

        Dim oRow As DataRow
        Dim sOfficalImage As String
        Dim info As ToolTipControlInfo = Nothing
        Dim sTooltip1 As New SuperToolTip()



        selectedRowHandles = GridView2.GetSelectedRows()
        selectedRowHandle = selectedRowHandles(0)
        'oRow = GridView1.GetDataRow(selectedRowHandle)

        oRow = GridView2.GetDataRow(selectedRowHandle)
        sOfficalImage = oRow.Item("OfficialImage").ToString()


        Dim args As New DevExpress.Utils.ToolTipControllerShowEventArgs

        Dim tip As New DevExpress.Utils.SuperToolTip
        Dim im As Image
        im = GetImageBase64NoPicBox(sOfficalImage)
        '  tip.MaxWidth = 100

        args.SuperTip = tip
        args.ToolTipType = DevExpress.Utils.ToolTipType.SuperTip

        args.ImageOptions.Image = ScaleThumbnailImage(im, 300, 300)
        args.ImageOptions.Alignment = ToolTipImageAlignment.Right


        oPoint.X = oPoint.X + 300
        ToolTipController1.ShowHint(args, oPoint)

    End Sub

    'Private Sub toolTipController1_GetActiveObjectInfo(ByVal sender As Object, ByVal e As ToolTipControllerGetActiveObjectInfoEventArgs)
    '    If e.Info Is Nothing AndAlso e.SelectedControl = GridMetaSearch Then
    '        Dim view As GridView = TryCast(GridMetaSearch.FocusedView, GridView)
    '        Dim info As GridHitInfo = view.CalcHitInfo(e.ControlMousePosition)

    '        If info.InRowCell Then
    '            Dim text As String = view.GetRowCellDisplayText(info.RowHandle, info.Column)
    '            Dim cellKey As String = info.RowHandle.ToString() & " - " + info.Column.ToString()
    '            Dim toolTipInfo As ToolTipControlInfo = New ToolTipControlInfo(cellKey, text)
    '            Dim superTip As SuperToolTip = New SuperToolTip()
    '            superTip.Items.Add(New ToolTipItem() With {
    '                .Image = ""
    '        })
    '            toolTipInfo.SuperTip = superTip
    '            e.Info = toolTipInfo
    '        End If
    '    End If
    'End Sub

    'Private Sub toolTipController1_CalcSize(ByVal sender As Object, ByVal e As ToolTipControllerCalcSizeEventArgs) Handles ToolTipController1.CalcSize

    '    e.Size = New Size(200, 200)
    '    'Dim toolTip As SuperToolTip = e.ShowInfo.SuperTip
    '    'If toolTip.Items.Count = 1 Then
    '    '    Dim item As ToolTipItem = TryCast(toolTip.Items(0), ToolTipItem)
    '    '    If item IsNot Nothing Then
    '    '        If item.Image IsNot Nothing Then
    '    '            ' e.Size = item.Image.Size
    '    '            e.Size = New Size(300, 300)
    '    '        End If
    '    '    End If
    '    'End If
    'End Sub

    Private Sub ShowEBook()
        Dim sContainerPath As String
        Dim sISBN As String
        Dim sFileName As String
        Dim sOutPath As String
        Dim sZipFileName As String
        Dim seBookPath As String


        'sISBN = "9781427199461"
        ' sFileName = sISBN & ".zip"
        ' sOutPath = "Z:\test\temp"
        ' sContainerPath = "books/BrainHive_Partners/Crabtree/Batch4/" & sISBN & "/"


        Dim oEditOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView2.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow


        Me.Cursor = Cursors.WaitCursor

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView2.GetDataRow(selectedRowHandle)


        sISBN = oRow.Item("eBook_ISBN_13").ToString()
        sContainerPath = oRow.Item("EBookPath").ToString()
        'Need to remove 1st /
        sContainerPath = sContainerPath.Remove(0, 1)
        sContainerPath = sContainerPath & sISBN
        sFileName = sISBN & ".zip"
        ' sOutPath = "Z:\test\temp"

        sOutPath = Path.GetTempPath()

        DownloadFileFromBlob(sContainerPath, sFileName, sOutPath)
        sZipFileName = sOutPath & "\" & sFileName
        seBookPath = sOutPath & sISBN
        'Need to Zip the file
        'If File.Exists(sZipFileName) Then
        '    File.Delete(sZipFileName)
        'End If
        If Directory.Exists(seBookPath) Then
            Directory.Delete(seBookPath, True)
        End If
        ZipFile.ExtractToDirectory(sZipFileName, seBookPath)

        Dim ofrmBrowser As New frmBrowser
        Me.Cursor = Cursors.Default
        With ofrmBrowser
            .HTMLFolder = seBookPath

            .Show()
        End With
    End Sub

    Private Sub GridView2_MouseUp(sender As Object, e As MouseEventArgs) Handles GridView2.MouseUp
        If e.Button = MouseButtons.Right Then
            PopupMenu1.ShowPopup(Control.MousePosition)
        End If
    End Sub

    Private Sub BarButtonItem1_ViewBook_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_ViewBook.ItemClick
        ShowEBook()
    End Sub

    Private Sub GridMetaSearch_Click(sender As Object, e As EventArgs) Handles GridMetaSearch.Click

    End Sub

    Private Sub BarButtonItem1_ViewCover_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_ViewCover.ItemClick
        ShowBookCover(Me.Location)
    End Sub

    Private Sub BarButtonItem1_CustomerInvoiceOrderItems_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_CustomerInvoiceOrderItems.ItemClick
        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim sFile As String
        Dim sCustomerPO As String
        Dim sBHPO As String
        Dim sBillTo_Name As String
        Dim sBillTo_Name_NoSpace As String

        Dim sBillToState As String
        Dim sInvoiceFileName As String

        'We modified this to handle the customer PO as well
        Dim frmCustomerInvoice As New frmPublisherPO

        Dim oOrderItems As DataTable

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)



        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        oOrderItems = GetOrderItemsInOrder(oOrderID.ToString)


        'Need to swap this out later...maybe store in DB
        sFile = HiveTemplatePath & "HIVE_Customer_Invoice_Template.xlsx"


        With oRow
            sCustomerPO = .Item("PurchasingPONumber").ToString
            sBHPO = .Item("BHPONumber").ToString
            sBillTo_Name = .Item("BillTo_Name").ToString
            sBillToState = .Item("BillTo_State").ToString
        End With
        'Lets get rid on the spaces from the name

        sBillTo_Name_NoSpace = sBillTo_Name.Replace(" ", "")

        'INV_KS_HAYSUSD_PO_0084220022
        sInvoiceFileName = "INV_" & sBillToState & "_" & sBillTo_Name_NoSpace & "_PO_" & sCustomerPO

        With frmCustomerInvoice

            .BarButtonItem1.Caption = "Save INV to Order Docs"
            .BarButtonItem2.Caption = "Send INV to Customer"


            .BarButtonItem2.ImageOptions.LargeImage = My.Resources.sendpdf_32x32
            .oOrderDocType = clsDibsOrderMgmt.OrderDocTypes.CustInvoice
            .Text = sInvoiceFileName
            .oOrderInfoDataTable = GetOrderInfo(oOrderID)
            .oOrderItemsDataTable = oOrderItems
            .oOrderID = oOrderID
            .SpreadsheetControl1.LoadDocument(sFile)
            '
            '.SetPublisherPO_FixedCells()
            .SetCustomerInvoice_FixedCells()
            .AddOrderItems_CustomerPO(True)
            ' .AddOrderSets()
            .StartPosition = FormStartPosition.CenterParent
            .Show()
            ' .LoadExcel()

        End With

    End Sub

    Private Sub BarButtonItem1_EBookSales_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_EBookSales.ItemClick
        Dim oEditOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)

        'oRow.Item("OrderID").ToString()
        oEditOrderID = Guid.Parse(oRow.Item("OrderID").ToString())


        Dim oForm As New frmEBookSales

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oEditOrderID
            .bAllEBookSales = True
            .StartPosition = FormStartPosition.CenterParent

            .Show()

        End With

        LoadOrdersGrid()
    End Sub

    Private Sub BarButtonItem1_PublisherCheckIn_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_PublisherCheckIn.ItemClick
        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim sFile As String
        Dim sCustomerPO As String
        Dim sBHPO As String
        Dim sBillTo_Name As String
        Dim sBillTo_Name_NoSpace As String

        Dim sBillToState As String
        Dim sInvoiceFileName As String

        'We modified this to handle the customer PO as well
        '  Dim frmCustomerInvoice As New frmPublisherPO
        Dim oSelectedPartners As List(Of DataRowView)
        Dim iPartnerCnt As Integer
        Dim iPartnerID As Integer
        Dim ofrmPOPublisher As frmPublisherPO
        Dim sPartner As String

        Dim oOrderPartners As DataTable
        Dim oOrderSets As DataTable

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)



        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        oOrderSets = GetOrderSetsInOrder(oOrderID.ToString)
        oOrderPartners = GetPartnersInOrder(oOrderID.ToString)
        iPartnerCnt = oOrderPartners.Rows.Count

        'Need to swap this out later...maybe store in DB
        sFile = HiveTemplatePath & "HIVE_PublisherCheckin_Template.xlsx"


        With oRow
            sCustomerPO = .Item("PurchasingPONumber").ToString
            sBHPO = .Item("BHPONumber").ToString
            sBillTo_Name = .Item("BillTo_Name").ToString
            sBillToState = .Item("BillTo_State").ToString
        End With
        'Lets get rid on the spaces from the name

        sBillTo_Name_NoSpace = sBillTo_Name.Replace(" ", "")




        Select Case iPartnerCnt
            Case 0
                MsgBox("There are no order items in this Order from a Partner.")
                Exit Sub

            Case 1

                'Only 1 or, so go an launch each
                For Each oRow In oOrderPartners.Rows
                    iPartnerID = oRow.Item("PartnerID")
                    sPartner = oRow.Item("PublisherShortName")
                    ofrmPOPublisher = New frmPublisherPO

                    'INV_KS_HAYSUSD_PO_0084220022
                    sInvoiceFileName = "PublisherCheckIn_" & sBillToState & "_" & sBillTo_Name_NoSpace & "_" & sBHPO

                    With ofrmPOPublisher

                        .BarButtonItem1.Caption = "Save Publisher 'Check In' to Order Docs"
                        .BarButtonItem2.Caption = "Send Publisher 'Check In'"


                        ' .BarButtonItem2.ImageOptions.LargeImage = My.Resources.sendpdf_32x32
                        .oOrderDocType = clsDibsOrderMgmt.OrderDocTypes.CheckinDocument
                        .Text = sInvoiceFileName
                        .oOrderInfoDataTable = GetOrderInfo(oOrderID)
                        .oOrderSetsDataTable = oOrderSets
                        .oOrderID = oOrderID
                        .SpreadsheetControl1.LoadDocument(sFile)
                        '
                        .iPartnerID = iPartnerID
                        .sPartner = sPartner
                        .SetPublisherCheckIn_FixedCells()
                        '         .AddOrderSets()
                        '.AddOrderItems()
                        .AddPublisherCheckInItems()
                        .StartPosition = FormStartPosition.CenterParent
                        .Show()
                        ' .LoadExcel()

                    End With
                Next




            Case Else


                Dim oSelectPartners As New frmOrderPublishersSelect

                With oSelectPartners
                    .oOrderID = oOrderID
                    .oOrderPartners = oOrderPartners
                    .StartPosition = FormStartPosition.CenterParent
                    .ShowDialog()

                    If .bCanceled = True Then Exit Sub
                    oSelectedPartners = .oPartnersSelected
                End With

                'Instead of a data table....here we have a list of select rows
                For Each oDataRowView In oSelectedPartners


                    iPartnerID = oDataRowView.Item("PartnerID")
                    sPartner = oDataRowView.Item("PublisherShortName")
                    ofrmPOPublisher = New frmPublisherPO

                    'INV_KS_HAYSUSD_PO_0084220022
                    sInvoiceFileName = "PublisherCheckIn_" & sBillToState & "_" & sBillTo_Name_NoSpace & "_" & sBHPO

                    With ofrmPOPublisher

                        .BarButtonItem1.Caption = "Save Publisher 'Check In' to Order Docs"
                        .BarButtonItem2.Caption = "Send Publisher 'Check In'"


                        ' .BarButtonItem2.ImageOptions.LargeImage = My.Resources.sendpdf_32x32
                        .oOrderDocType = clsDibsOrderMgmt.OrderDocTypes.CheckinDocument
                        .Text = sInvoiceFileName
                        .oOrderInfoDataTable = GetOrderInfo(oOrderID)
                        .oOrderSetsDataTable = oOrderSets
                        .oOrderID = oOrderID
                        .SpreadsheetControl1.LoadDocument(sFile)
                        '

                        .SetPublisherCheckIn_FixedCells()
                        '         .AddOrderSets()
                        '.AddOrderItems()
                        .iPartnerID = iPartnerID
                        .sPartner = sPartner
                        .AddPublisherCheckInItems()
                        .StartPosition = FormStartPosition.CenterParent
                        .Show()
                        ' .LoadExcel()

                    End With
                Next


        End Select






    End Sub



    Private Sub XtraTabPage3_MetaSearch_Click(sender As Object, e As EventArgs) Handles XtraTabPage3_MetaSearch.Click

    End Sub

    Private Sub XtraTabPage3_MetaSearch_VisibleChanged(sender As Object, e As EventArgs) Handles XtraTabPage3_MetaSearch.VisibleChanged
        If MetaSearchTabClickedOnce = False Then

            LoadMetaSearchGrid()
            MetaSearchTabClickedOnce = True

        End If
    End Sub

    Private Sub XtraTabPage1_PubInvoiceTracker_VisibleChanged(sender As Object, e As EventArgs) Handles XtraTabPage1_PubInvoiceTracker.VisibleChanged
        If PubInvoiceTabClickedOnce = False Then

            LoadPubInvoiceGrid()
            PubInvoiceTabClickedOnce = True

        End If
    End Sub

    Private Sub cmdExportOrdersGrid_Click(sender As Object, e As EventArgs) Handles cmdExportOrdersGrid.Click
        Dim sPath As String
        Dim oDialog As New SaveFileDialog

        With oDialog
            .ShowDialog()
            sPath = .FileName
        End With
        gridOrders.ExportToXlsx(sPath)
    End Sub

    Private Sub cmdAddPubInvoices_Click(sender As Object, e As EventArgs) Handles cmdAddPubInvoices.Click
        frmPubInvoiceItemsAdd.Show()

    End Sub

    Private Sub cmdRefreshPubInvoicesGrid_Click(sender As Object, e As EventArgs) Handles cmdRefreshPubInvoicesGrid.Click
        LoadPubInvoiceGrid()

    End Sub

    Private Sub cmdMarkPubInvoicesPaid_Click(sender As Object, e As EventArgs) Handles cmdMarkPubInvoicesPaid.Click
        Dim oOrderID As Guid
        'Gridview3 is Pub Invoices
        Dim oPubInvoicesView As GridView

        oPubInvoicesView = GridView3
        Dim selectedRowHandles As Int32() = oPubInvoicesView.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim iSelectedRowsCount As Integer
        Dim oPubInvoiceItems As New List(Of PubInvoiceItem)
        Dim oPubInvoicesDataTable As New DataTable

        Dim oPubInvoiceItem As PubInvoiceItem
        Dim sLastPublisher As String
        Dim sDifferentPubs As String

        Dim TotalInvoiceAmounts As Decimal


        'We modified this to handle the customer PO as well
        ' Dim frmCustomerInvoice As New frmPublisherPO



        If selectedRowHandles.Count = 0 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If

        sLastPublisher = ""
        For Each selectedRowHandle In selectedRowHandles
            'selectedRowHandle = selectedRowHandles(0)
            'Gridview3 is Pub Invoices
            oRow = oPubInvoicesView.GetDataRow(selectedRowHandle)

            oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
            oPubInvoiceItem = New PubInvoiceItem

            With oRow
                oPubInvoiceItem.PubPaymentID = .Item("PubPaymentID").ToString
                oPubInvoiceItem.PartnerID = .Item("PartnerID").ToString
                oPubInvoiceItem.BHPONumber = .Item("BHPONumber").ToString
                oPubInvoiceItem.PublisherName = .Item("PublisherName").ToString
                oPubInvoiceItem.PublisherInvoiceNumber = .Item("PublisherInvoiceNumber").ToString
                oPubInvoiceItem.InvoiceAmount = .Item("InvoiceAmount").ToString

                If .Item("DatePaid") Is DBNull.Value Then
                    'Want Date to be null
                Else
                    oPubInvoiceItem.DatePaid = .Item("DatePaid")
                    'Need to show msg and exit
                    MsgBox("You can not include existing paid Invoices. (" & oPubInvoiceItem.PublisherInvoiceNumber & ")",, "Error: Invoice already paid.")
                    Exit Sub
                End If


                TotalInvoiceAmounts = TotalInvoiceAmounts + oPubInvoiceItem.InvoiceAmount

                If sLastPublisher <> "" Then
                    'Should mix different publishers when ACH Payment notice and marking as paid

                    If oPubInvoiceItem.PublisherName <> sLastPublisher Then
                        sDifferentPubs = oPubInvoiceItem.PublisherName & " / " & sLastPublisher
                        MsgBox("You can NOT mark two differnt Publishers/Partners Invoices paid at the sametime. (" & sDifferentPubs & ")",, "Error: Differnt Pub Partners")
                        Exit Sub

                    End If
                Else
                    sLastPublisher = oPubInvoiceItem.PublisherName
                End If

            End With
            oPubInvoiceItems.Add(oPubInvoiceItem)

        Next



        Dim ofrmACHPayment As New frmACHDateScheduled

        With ofrmACHPayment
            .oPubInvoiceItems = oPubInvoiceItems
            .TotalInvoices = TotalInvoiceAmounts
            .PublisherName = sLastPublisher
            .iPartnerID = oPubInvoiceItem.PartnerID


            .ShowDialog()
        End With



        'oRow.Item("OrderID").ToString()

        '  oOrderItems = GetOrderItemsInOrder(oOrderID.ToString)


        LoadPubInvoiceGrid()




    End Sub

    Private Sub gridPubInvoices_Click(sender As Object, e As EventArgs) Handles gridPubInvoices.Click

    End Sub

    Private Sub gridPubInvoices_MouseUp(sender As Object, e As MouseEventArgs) Handles gridPubInvoices.MouseUp
        If e.Button = MouseButtons.Right Then
            PopupMenu2.ShowPopup(Control.MousePosition)
        End If
    End Sub

    Private Sub BarButtonItem2_PubInvoiceDocs_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem2_PubInvoiceDocs.ItemClick
        Dim oEditOrderID As Guid

        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim iPartnerID As Integer
        Dim PubInvoiceNumber As String
        Dim PubPaymentID As String

        Dim selectedRowHandles As Int32() = GridView3.GetSelectedRows()
        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView3.GetDataRow(selectedRowHandle)

        'oRow.Item("OrderID").ToString()
        oEditOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        iPartnerID = oRow.Item("PartnerID")
        PubInvoiceNumber = oRow.Item("PublisherInvoiceNumber").ToString
        PubPaymentID = oRow.Item("PubPaymentID").ToString

        Dim oForm As New frmOrderDocuments

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oEditOrderID
            .PartnerID = iPartnerID
            .PubInvoiceNumber = PubInvoiceNumber
            .DocTypeSpecific = clsDibsOrderMgmt.OrderDocTypes.PubInvoice
            .PubPaymentID = PubPaymentID
            .LabelControl1.Text = "Documents - Pub Invoices"

            .StartPosition = FormStartPosition.CenterParent

            ' .MdiParent = Me
            .Show()


        End With
    End Sub

    Private Sub BarButtonItem1_PubInvoiceDetail_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_PubInvoiceDetail.ItemClick
        ShowPubInvoiceDetail()
    End Sub
    Private Sub ShowPubInvoiceDetail()
        Dim oEditOrderID As Guid

        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim iPartnerID As Integer
        Dim PubInvoiceNumber As String
        Dim PubPaymentID As String
        Dim BHPONumber As String
        Dim InvoiceAmount As Decimal
        Dim DueDate As Date
        Dim PlanToPay As Date

        Dim selectedRowHandles As Int32() = GridView3.GetSelectedRows()
        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView3.GetDataRow(selectedRowHandle)

        'oRow.Item("OrderID").ToString()
        oEditOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        iPartnerID = oRow.Item("PartnerID")
        PubInvoiceNumber = oRow.Item("PublisherInvoiceNumber").ToString
        PubPaymentID = oRow.Item("PubPaymentID").ToString
        BHPONumber = oRow.Item("BHPONumber").ToString
        InvoiceAmount = oRow.Item("InvoiceAmount").ToString
        DueDate = oRow.Item("DueDate")
        PlanToPay = oRow.Item("PlanToPay")

        Dim oForm As New frmPubInvoiceItemsAdd

        With oForm
            .UpdateExisitngPubInvoice = True

            .OrderID = oEditOrderID.ToString
            .PubPaymentID = PubPaymentID

            .BHPONumber_Orig = BHPONumber
            .PartnerID_Orig = iPartnerID
            ''.cmbBHPONumber.Enabled = False
            '.cmbPartner.Enabled = False
            .txtPubInvoiceNumber.Text = PubInvoiceNumber

            .txtInvoiceAmount.Text = FormatCurrency(InvoiceAmount)
            .DateEditDueDate.EditValue = DueDate
            .DateEditPlanToPayDate.EditValue = PlanToPay


            .PubPaymentID = PubPaymentID
            .LabelControl1.Text = "Add/Update Pub Invoice"

            .StartPosition = FormStartPosition.CenterParent

            ' .MdiParent = Me
            .Show()


        End With
    End Sub

    Private Sub GridView3_DoubleClick(sender As Object, e As EventArgs) Handles GridView3.DoubleClick
        ShowPubInvoiceDetail()
    End Sub
End Class