Imports System.Data.SqlClient
Imports DevExpress.XtraBars
Imports DevExpress.XtraEditors
Imports DevExpress.XtraGrid.Views.Grid

Public Class frmMain
    Sub New()

        InitializeComponent()
        ' This line of code is generated by Data Source Configuration Wizard
        'Commented out...because are going to set data manually
        ' OmqryOrdersMainTableAdapter1.Fill(DiBS_DB_ProdDataSet1.omqryOrdersMain)
        SetConnection()
        LoadOrdersGrid()
    End Sub
    Private Sub LoadOrdersGrid()

        Dim sSQL As String = "SELECT * FROM omqryOrdersMain"

        Dim ds As New DataSet
        Dim da As SqlDataAdapter
        Dim iCount As Integer

        oConnection = New SqlConnection(sConnectionString)
        oConnection.Open()
        da = New SqlDataAdapter(sSQL, oConnection)
        da.Fill(ds)
        oConnection.Close()

        gridOrders.DataSource = ds.Tables(0)





    End Sub
    Private Sub cmdButton_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub cmdNewOrder_Click(sender As Object, e As EventArgs) Handles cmdNewOrder.Click
        Dim oNewOrderID As Guid

        oNewOrderID = Guid.NewGuid


        Dim oForm As New frmNewOrder

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oNewOrderID
            .ShowDialog()
        End With

        LoadOrdersGrid()
    End Sub

    Private Sub panelTop_Paint(sender As Object, e As PaintEventArgs) Handles panelTop.Paint

    End Sub

    Private Sub frmMain_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        ' XtraTabControl1.TabPages(1).Show()

    End Sub

    Private Sub mainTab_Paint(sender As Object, e As PaintEventArgs)

        Dim sColor As String
        Dim oColor As Color





        oColor = Color.White
        Dim ColorBrush As SolidBrush = New SolidBrush(oColor)
        Dim rect As Rectangle = New Rectangle(0, 0, 200, 200)
        rect = sender.bounds
        e.Graphics.FillRectangle(ColorBrush, rect)


    End Sub

    Private Sub XtraTabControl1_Click(sender As Object, e As EventArgs) Handles XtraTabControl1.Click

    End Sub

    Private Sub XtraTabControl1_Paint(sender As Object, e As PaintEventArgs) Handles XtraTabControl1.Paint
        Dim sColor As String
        Dim oColor As Color

        oColor = Color.White
        Dim ColorBrush As SolidBrush = New SolidBrush(oColor)
        Dim rect As Rectangle = New Rectangle(0, 0, 200, 200)
        rect = sender.bounds
        e.Graphics.FillRectangle(ColorBrush, rect)
    End Sub

    Private Sub XtraTabPage2_Paint(sender As Object, e As PaintEventArgs) Handles XtraTabPage2_Orders.Paint
        Dim sColor As String
        Dim oColor As Color

        oColor = Color.White
        Dim ColorBrush As SolidBrush = New SolidBrush(oColor)
        Dim rect As Rectangle = New Rectangle(0, 0, 200, 200)
        rect = sender.bounds
        e.Graphics.FillRectangle(ColorBrush, rect)
    End Sub

    Private Sub gridOrders_Click(sender As Object, e As EventArgs) Handles gridOrders.Click

    End Sub

    Private Sub gridOrders_Paint(sender As Object, e As PaintEventArgs) Handles gridOrders.Paint

    End Sub

    Private Sub GridView1_RowCellStyle(sender As Object, e As RowCellStyleEventArgs) Handles GridView1.RowCellStyle
        Dim view As GridView = TryCast(sender, GridView)
        ' Dim _mark As Boolean = CBool(view.GetRowCellValue(e.RowHandle, "Mark"))
        Dim oColor As Color
        Dim sColorName As String

        If e.Column.FieldName = "OrderStatus" Then
            If Not IsNothing(view.GetRowCellValue(e.RowHandle, "OrderStatusColor")) Then
                sColorName = view.GetRowCellValue(e.RowHandle, "OrderStatusColor").ToString
                If IsNothing(sColorName) Or sColorName = "" Then Exit Sub
                oColor = Color.FromName(sColorName)
                e.Appearance.BackColor = oColor

            End If


            'e.Appearance.BackColor = If(_mark, Color.LightGreen, Color.LightSalmon)
            'e.Appearance.TextOptions.HAlignment = If(_mark, HorzAlignment.Far, HorzAlignment.Near)
        End If
        'If e.Column.FieldName = "Length" Then
        '    Dim _length As Double = CDbl(e.CellValue)
        '    If _length > 25 Then
        '        e.Appearance.ForeColor = Color.Red
        '    End If
        'End If
    End Sub

    Private Sub GridView1_MouseUp(sender As Object, e As MouseEventArgs) Handles GridView1.MouseUp
        If e.Button = MouseButtons.Right Then
            PopupMenu_Orders.ShowPopup(Control.MousePosition)
        End If
    End Sub
    Private Sub BarButtonItem1_Documents_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_Documents.ItemClick
        Dim oEditOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)

        'oRow.Item("OrderID").ToString()
        oEditOrderID = Guid.Parse(oRow.Item("OrderID").ToString())


        Dim oForm As New frmOrderDocuments

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oEditOrderID


            .ShowDialog()

        End With

    End Sub
    Private Sub BarButtonItem_OrderDetail_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem_OrderDetail.ItemClick
        LoadOrderDetail()

    End Sub

    Private Sub SimpleButton1_Click(sender As Object, e As EventArgs) Handles SimpleButton1.Click

        ' CreateMailItem()
        'Dim sFile As String
        Dim ofrmSubItem As New frmOrderItemSub
        Dim oOrderItem As New OrderItem

        'sFile = "Y:\MEP - Shared\BrainHive\BH_OrderMgmt\HIVE_Templates\HIVE_PublisherPO_Template.xlsx"
        With oOrderItem
            .OrderItemID = "3366e1ef-f506-47ed-8aa7-0a7bb75f7a8a"
            .ItemNumberISBN = "9781641565288"
            .ItemDesc = "Wants and Needs"
            .QTY = 6
            .ListPrice = 9.0
            .ExtendedPrice = 54.0


        End With
        With ofrmSubItem
            .oCurrentOrderItem = oOrderItem
            .Show()
        End With


        ' Process.Start(sFile)
        'frmExcelViewer.Show()
        ' frmRTFViewer.Show()

        'frmMetaImport.Show()

        'Dim oAddItems As New frmOrderItemsAdd

        'With oAddItems
        '    .oOrderID = Guid.Parse("5d30c41a-4755-4ee8-b9eb-a95296e95d7a")

        '    .ShowDialog()
        'End With


    End Sub

    Private Sub SimpleButton2_Click(sender As Object, e As EventArgs) Handles SimpleButton2.Click
        Dim oFrmPdf As New frmPDFViewer

        Dim sSQL As String = "SELECT * FROM omOrderDocuments where DocumentID='3e19c385-015c-402c-bf44-d52c41605b7e'"

        Dim ds As New DataSet
        Dim da As SqlDataAdapter
        Dim iCount As Integer

        oConnection = New SqlConnection(sConnectionString)
        oConnection.Open()
        da = New SqlDataAdapter(sSQL, oConnection)
        da.Fill(ds)
        oConnection.Close()
        Dim oBytes As Byte()

        oBytes = ds.Tables(0).Rows(0).Item("OrderDoc")

        With oFrmPdf
            .PDFBytes = oBytes
            .LoadPDF()
            .Show()

        End With

    End Sub

    Public Sub LoadOrderDetail()
        Dim oEditOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow

        Try
            Me.Cursor = Cursors.WaitCursor

            If selectedRowHandles.Count <> 1 Then
                MsgBox("Must select 1 Row")
                Exit Sub
            End If
            selectedRowHandle = selectedRowHandles(0)

            oRow = GridView1.GetDataRow(selectedRowHandle)

            'oRow.Item("OrderID").ToString()
            oEditOrderID = Guid.Parse(oRow.Item("OrderID").ToString())


            Dim oForm As New frmNewOrder

            With oForm
                '.dgv_Grid.DataSource = ds.Tables(0)
                .oOrderID = oEditOrderID
                .bExistingOrder = True

                Me.Cursor = Cursors.Default
                .ShowDialog()

            End With
            'Refresh the grid (Could speed up by not refreshing a cancel)
            LoadOrdersGrid()

        Catch ex As Exception
            Me.Cursor = Cursors.Default
            MsgBox(ex.Message)
        End Try
    End Sub

    Private Sub gridOrders_DoubleClick(sender As Object, e As EventArgs) Handles gridOrders.DoubleClick
        LoadOrderDetail()
    End Sub

    Private Sub BarButtonItem1_OrderSets_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_OrderSets.ItemClick
        Dim oEditOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)

        'oRow.Item("OrderID").ToString()
        oEditOrderID = Guid.Parse(oRow.Item("OrderID").ToString())


        Dim oForm As New frmOrderSets

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oEditOrderID


            .ShowDialog()

        End With

        LoadOrdersGrid()

    End Sub

    Private Sub cmdMetaImport_Click(sender As Object, e As EventArgs) Handles cmdMetaImport.Click
        frmMetaImport.Show()
    End Sub

    Private Sub BarButtonItem1_OrderItems_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_OrderItems.ItemClick
        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)

        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())


        Dim oForm As New frmOrderItems

        With oForm
            '.dgv_Grid.DataSource = ds.Tables(0)
            .oOrderID = oOrderID


            .ShowDialog()

        End With
    End Sub

    Private Sub BarButtonItem1_PublisherPOs_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_PublisherPOs.ItemClick

        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim sFile As String
        Dim iPartnerID As Integer
        Dim iPartnerCnt As Integer
        Dim oForms As List(Of frmPublisherPO)
        Dim ofrmPOPublisher As frmPublisherPO
        Dim oSelectedPartners As List(Of DataRowView)

        Dim oOrderPartners As DataTable

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)



        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        oOrderPartners = GetPartnersInOrder(oOrderID.ToString)
        iPartnerCnt = oOrderPartners.Rows.Count

        'Need to swap this out later...maybe store in DB
        sFile = HiveTemplatePath & "HIVE_PublisherPO_Template.xlsx"

        Select Case iPartnerCnt
            Case 0
                MsgBox("There are no order items in this Order from a Partner.")
                Exit Sub

            Case 1

                'Only 1 or, so go an launch each
                For Each oRow In oOrderPartners.Rows
                    iPartnerID = oRow.Item("PartnerID")
                    ofrmPOPublisher = New frmPublisherPO


                    With ofrmPOPublisher
                        .Text = oRow.Item("PublisherShortName").ToString & " - PO: "
                        .oOrderInfoDataTable = GetOrderInfo(oOrderID)
                        .iPartnerID = iPartnerID
                        .oOrderID = oOrderID
                        .SpreadsheetControl1.LoadDocument(sFile)
                        .SetPublisherPO_FixedCells()
                        .AddOrderItems()
                        .Show()
                        ' .LoadExcel()

                    End With
                Next
            Case Else


                Dim oSelectPartners As New frmOrderPublishersSelect

                With oSelectPartners
                    .oOrderID = oOrderID
                    .oOrderPartners = oOrderPartners

                    .ShowDialog()

                    If .bCanceled = True Then Exit Sub
                    oSelectedPartners = .oPartnersSelected
                End With

                'Instead of a data table....here we have a list of select rows
                For Each oDataRowView In oSelectedPartners
                    iPartnerID = oDataRowView.Row.Item("PartnerID")
                    ofrmPOPublisher = New frmPublisherPO

                    With ofrmPOPublisher
                        .Text = oDataRowView.Row.Item("PublisherShortName").ToString & " - PO: "
                        .oOrderInfoDataTable = GetOrderInfo(oOrderID)
                        .iPartnerID = iPartnerID
                        .oOrderID = oOrderID
                        .SpreadsheetControl1.LoadDocument(sFile)
                        .SetPublisherPO_FixedCells()
                        .AddOrderItems()
                        .Show()
                        ' .LoadExcel()

                    End With
                Next
        End Select









    End Sub

    Private Sub BarButtonItem2_CreateQuote_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem2_CreateQuote.ItemClick
        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim sFile As String
        Dim iPartnerID As Integer
        Dim iPartnerCnt As Integer
        Dim oForms As List(Of frmPublisherPO)
        Dim ofrmPOPublisher As frmPublisherPO
        Dim oSelectedPartners As List(Of DataRowView)

        Dim oOrderPartners As DataTable

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)



        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        oOrderPartners = GetPartnersInOrder(oOrderID.ToString)
        iPartnerCnt = oOrderPartners.Rows.Count

        'Need to swap this out later...maybe store in DB
        sFile = HiveTemplatePath & "HIVE_PublisherPO_Template.xlsx"

        Select Case iPartnerCnt
            Case 0
                MsgBox("There are no order items in this Order from a Partner.")
                Exit Sub

            Case 1

                'Only 1 or, so go an launch each
                For Each oRow In oOrderPartners.Rows
                    iPartnerID = oRow.Item("PartnerID")
                    ofrmPOPublisher = New frmPublisherPO


                    With ofrmPOPublisher
                        .Text = oRow.Item("PublisherShortName").ToString & " - PO: "
                        .iPartnerID = iPartnerID
                        .oOrderID = oOrderID
                        .SpreadsheetControl1.LoadDocument(sFile)
                        .SetPublisherPO_FixedCells()
                        .AddOrderItems()
                        .Show()
                        ' .LoadExcel()

                    End With
                Next
            Case Else


                Dim oSelectPartners As New frmOrderPublishersSelect

                With oSelectPartners
                    .oOrderID = oOrderID
                    .oOrderPartners = oOrderPartners

                    .ShowDialog()

                    If .bCanceled = True Then Exit Sub
                    oSelectedPartners = .oPartnersSelected
                End With

                'Instead of a data table....here we have a list of select rows
                For Each oDataRowView In oSelectedPartners
                    iPartnerID = oDataRowView.Row.Item("PartnerID")
                    ofrmPOPublisher = New frmPublisherPO

                    With ofrmPOPublisher
                        .Text = oDataRowView.Row.Item("PublisherShortName").ToString & " - PO: "
                        .iPartnerID = iPartnerID
                        .oOrderID = oOrderID
                        .SpreadsheetControl1.LoadDocument(sFile)
                        .SetPublisherPO_FixedCells()
                        .AddOrderItems()
                        .Show()
                        ' .LoadExcel()

                    End With
                Next
        End Select





    End Sub

    Private Sub BarButtonItem1_CustomerInvoiceOrderSets_ItemClick(sender As Object, e As ItemClickEventArgs) Handles BarButtonItem1_CustomerInvoiceOrderSets.ItemClick
        Dim oOrderID As Guid
        Dim selectedRowHandles As Int32() = GridView1.GetSelectedRows()
        Dim selectedRowHandle As Int32
        Dim oRow As DataRow
        Dim oDataRowView As DataRowView
        Dim sFile As String
        Dim sCustomerPO As String
        Dim sBHPO As String
        Dim sBillTo_Name As String
        Dim sBillTo_Name_NoSpace As String

        Dim sBillToState As String
        Dim sInvoiceFileName As String

        'We modified this to handle the customer PO as well
        Dim frmCustomerInvoice As New frmPublisherPO

        Dim oOrderSets As DataTable

        If selectedRowHandles.Count <> 1 Then
            MsgBox("Must select 1 Row")
            Exit Sub
        End If
        selectedRowHandle = selectedRowHandles(0)

        oRow = GridView1.GetDataRow(selectedRowHandle)



        'oRow.Item("OrderID").ToString()
        oOrderID = Guid.Parse(oRow.Item("OrderID").ToString())
        oOrderSets = GetOrderSetsInOrder(oOrderID.ToString)


        'Need to swap this out later...maybe store in DB
        sFile = HiveTemplatePath & "HIVE_Customer_Invoice_Template.xlsx"


        With oRow
            sCustomerPO = .Item("PurchasingPONumber").ToString
            sBHPO = .Item("BHPONumber").ToString
            sBillTo_Name = .Item("BillTo_Name").ToString
            sBillToState = .Item("BillTo_State").ToString
        End With
        'Lets get rid on the spaces from the name

        sBillTo_Name_NoSpace = sBillTo_Name.Replace(" ", "")

        'INV_KS_HAYSUSD_PO_0084220022
        sInvoiceFileName = "INV_" & sBillToState & "_" & sBillTo_Name_NoSpace & "_PO_" & sCustomerPO

        With frmCustomerInvoice
            .Text = sInvoiceFileName
            .oOrderInfoDataTable = GetOrderInfo(oOrderID)
            .oOrderSetsDataTable = oOrderSets
            .oOrderID = oOrderID
            .SpreadsheetControl1.LoadDocument(sFile)
            '
            '.SetPublisherPO_FixedCells()
            .SetCustomerInvoice_FixedCells()
            '.AddOrderItems()
            .AddOrderSets()
            .Show()
            ' .LoadExcel()

        End With


    End Sub
End Class